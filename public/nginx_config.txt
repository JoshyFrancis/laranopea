##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;

    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;
    # text/html is always compressed by gzip module
    
    location ~*  \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
        expires 7d;
    }    
    
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;
	root /var/www/laraquick/public;
	
	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;
    index index.php index.html index.htm index.nginx-debian.html;

	server_name laraquick.com;
	
	
		 
		
		#LARAVEL PORTION
		
		#if you currently have the if...then statement you see below, you will want to wrap
		#it in the location statement so as to prevent Laravel from attempting to route
		#WordPress permalinks.
		location / {
		   if (!-e $request_filename)
		   {
			  rewrite ^/(.*)$ /index.php?/$1 last;
			  break;
		   }
		}
		
		# pass php scripts to php-fpm
		location ~ \.php(.*)$ {
		   fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		   try_files $uri $uri/ /index.php?q=$uri&args =404;
		   fastcgi_split_path_info ^(.+\.php)(/.+)$;
		   fastcgi_index index.php;
		   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		   include fastcgi_params;
		   fastcgi_read_timeout 6000;
		}
	
        location ~ /\.ht {
                deny all;
        }
	
	add_header Access-Control-Allow-Origin *;

	large_client_header_buffers 4 32k; # the default buffer number and size is 4 and 8k, so your bad header must be the one that's over 8192 bytes.

    
 

}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
